// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 20.1 (Build Build 720 11/11/2020)
// Created on Wed Apr 27 15:53:28 2022

register_file_4by1 register_file_4by1_inst
(
	.In(In_sig) ,	// input [3:0] In_sig
	.CLRN(CLRN_sig) ,	// input  CLRN_sig
	.Clock(Clock_sig) ,	// input  Clock_sig
	.w0(w0_sig) ,	// input  w0_sig
	.w1(w1_sig) ,	// input  w1_sig
	.read_ad1(read_ad1_sig) ,	// input  read_ad1_sig
	.read_ad0(read_ad0_sig) ,	// input  read_ad0_sig
	.out3(out3_sig) ,	// output [3:0] out3_sig
	.out2(out2_sig) ,	// output [3:0] out2_sig
	.out1(out1_sig) ,	// output [3:0] out1_sig
	.out0(out0_sig) ,	// output [3:0] out0_sig
	.read_out1(read_out1_sig) ,	// output [1:0] read_out1_sig
	.read_out0(read_out0_sig) 	// output [1:0] read_out0_sig
);

